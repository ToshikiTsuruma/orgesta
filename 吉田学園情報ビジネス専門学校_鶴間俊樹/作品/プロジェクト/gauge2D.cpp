//=============================================================================
//
// 2Dゲージ処理 [gauge2D.cpp]
// Author : 鶴間俊樹
//
//=============================================================================
#include "gauge2D.h"
#include "object2D.h"

//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CGauge2D::CGauge2D()
{

}

//=============================================================================
// オーバーロードされたコンストラクタ
//=============================================================================
CGauge2D::CGauge2D(int nMaxValue, bool bVertical) : CGauge(nMaxValue, bVertical)
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CGauge2D::~CGauge2D()
{

}

//=============================================================================
// 2Dゲージの生成処理
//=============================================================================
CGauge2D* CGauge2D::Create(int nMaxValue, bool bVertical, int nValue, int nDrawLifeMax, bool bExtend) {
	CGauge2D* pGauge2D;
	pGauge2D = new CGauge2D(nMaxValue, bVertical);
	if (pGauge2D == nullptr) return nullptr;

	pGauge2D->Init();
	pGauge2D->SetGaugeValue(nValue);
	pGauge2D->SetMaxDrawLife(nDrawLifeMax);
	pGauge2D->SetExtend(bExtend);

	return pGauge2D;
}

//=============================================================================
// 2Dゲージの初期化処理
//=============================================================================
HRESULT CGauge2D::Init(void) {
	CGauge::Init();
	return S_OK;
}

//=============================================================================
// 2Dゲージの終了処理
//=============================================================================
void CGauge2D::Uninit(void) {
	CGauge::Uninit();
}

//=============================================================================
// 2Dゲージの更新処理
//=============================================================================
void CGauge2D::Update(void) {
	CGauge::Update();
}

//=============================================================================
// 2Dゲージを生成
//=============================================================================
void CGauge2D::CreateGauge(CTexture::TEXTURE_TYPE typeTex, D3DXVECTOR3 pos, float fWidth, float fHeight) {
	//ゲージの生成
	CObject* pGauge = CObject2D::Create(pos, typeTex, fWidth, fHeight);
	//ゲージのポインタを設定
	SetGaugePtr(pGauge);
}

//=============================================================================
// 2Dゲージの背景を生成
//=============================================================================
void CGauge2D::CreateGaugeBG(CTexture::TEXTURE_TYPE typeTex, D3DXVECTOR3 pos, float fWidth, float fHeight) {
	//背景の生成
	CObject* pGaugeBG = CObject2D::Create(pos, typeTex, fWidth, fHeight);
	//ゲージのポインタを設定
	SetGaugeBGPtr(pGaugeBG);
}

//=============================================================================
// 2Dゲージの枠を生成
//=============================================================================
void CGauge2D::CreateGaugeFrame(CTexture::TEXTURE_TYPE typeTex, D3DXVECTOR3 pos, float fWidth, float fHeight) {
	//背景の生成
	CObject* pGaugeFrame = CObject2D::Create(pos, typeTex, fWidth, fHeight);
	//ゲージのポインタを設定
	SetGaugeFramePtr(pGaugeFrame);
}